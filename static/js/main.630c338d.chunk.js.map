{"version":3,"sources":["components/NavigationLayout/index.js","components/CheckBoxGroup/index.js","components/MessagesItem/index.js","components/MessagesList/index.js","views/MessagesIndex/index.js","views/MessagesShow/index.js","App.js","serviceWorker.js","index.js"],"names":["NavigationLayout","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","openMenu","setState","tagsUsed","tags","messages","map","message","uniqueTags","toConsumableArray","Set","flat","react_default","a","createElement","className","Reorder_default","onClick","openCloseMenu","bind","NavLink","activeClassName","to","concat","process","Inbox_default","Label_default","length","tag","i","key","Delete_default","Archive_default","children","Component","CheckBox","_ref","name","value","selected","onCheck","type","checked","onChange","e","target","MessagesItem","Link","id","sender","subject","dangerouslySetInnerHTML","subjectCharCount","console","log","__html","body","substring","createMarkup","moment","date","format","MessagesList","isAllSelected","messagesList","messagesData","onSelected","assertThisInitialized","checkName","isChecked","isAllChecked","isAllUnChecked","assign","findIndex","item","newMessageList","indexOf","splice","data","items","_this2","_this$state","components_MessagesItem","delete","MessagesIndex","components_MessagesList","MessagesShow","App","BrowserRouter","NavigationLayout_NavigationLayout","Switch","Route","exact","path","render","views_MessagesIndex","views_MessagesShow","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.630c338d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport NavBtn from '@material-ui/icons/Reorder';\nimport Inbox from '@material-ui/icons/Inbox';\nimport Archive from '@material-ui/icons/Archive';\nimport Delete from '@material-ui/icons/Delete';\nimport Label from '@material-ui/icons/Label';\nimport './style.scss'\n\nexport default class NavigationLayout extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      openMenu: false\n    }\n  }\n\n  openCloseMenu(openMenu) {\n    this.setState({ openMenu: !this.state.openMenu})\n  }\n\n  render() {\n    const tagsUsed = this.props.tags.messages.map(message => message.tags)\n    const uniqueTags = [...new Set(tagsUsed.flat())];\n    const {openMenu} = this.state\n\n    return (\n      <div className=\"layout\">\n      <div className=\"top-navigation\">\n        <div className=\"logo\">Ui-MAiL</div>\n        <NavBtn className=\"open-close-btn\" onClick={this.openCloseMenu.bind(this)}/>\n      </div>\n      <div className=\"panel-layout\">\n        <div className={openMenu ? 'sidebar sidebar-open': 'sidebar sidebar-closed'}>\n          <NavLink className=\"sidebar-item\" activeClassName=\"active\" to={`${process.env.PUBLIC_URL}/`}><Inbox className=\"icon\"/> Inbox</NavLink>\n          <b className=\"tag-title\"><Label  className=\"icon\"/> Tags Available ({uniqueTags.length})</b>\n            {\n              uniqueTags.map((tag, i) => {\n              return (\n                  <div className={`tag-wrapper tag-${tag}`} key={i}>\n                    <NavLink activeClassName=\"active\" to={`/messages/${tag}`}>{tag}</NavLink>\n                  </div>\n                  )\n              })\n            }\n          <NavLink className=\"sidebar-item\" activeClassName=\"active\" to=\"/messages/deleted\"><Delete className=\"icon\"/> Trash</NavLink>\n          <NavLink className=\"sidebar-item\" activeClassName=\"active\" to=\"/messages/archived\"><Archive  className=\"icon\"/> Archived</NavLink>\n        </div>\n        <div className=\"messages-wrapper\">\n          {this.props.children}\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\n\nNavigationLayout.propTypes = {\n  children: PropTypes.any\n};\n\n","import React from 'react';\n\nfunction CheckBox({className, name, value, children, selected, onCheck}) {\n  return (\n    <label className={className}>\n      <input\n          name={name}\n          type=\"checkbox\"\n          value={value}\n          checked={selected || false}\n          onChange={(e) => onCheck(value, e.target.checked)}\n      />\n      {children}\n    </label>\n  );\n}\n  \nexport {\n  CheckBox,\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport './styles.scss'\n\n\nconst MessagesItem = ({ message }) => {\n  \n  function createMarkup() {\n    let subjectCharCount = message.subject.length\n    console.log(subjectCharCount)\n    return {__html: message.body.substring(0, 85)};\n  }\n\n  return (\n   <Link to={`messages/${message.id}`}>\n      <div className=\"message-wrapper\">\n        <b>{message.sender}</b>\n        <div className=\"message-detail-wrapper\">\n          <b className=\"subject\">{message.subject}</b>\n          {\"- \"}\n          <div dangerouslySetInnerHTML={createMarkup()} />\n        </div>\n        {\n          message.tags.map((tag, i) => {\n            return (\n              <div className={`tags tag-${tag}`} key={i}>{tag}</div>\n            )\n          })\n        }\n        <div className=\"date-wrapper\">{moment(message.date).format(\"hh:mm a\")}</div>\n      </div>\n    </Link>\n  );\n};\n\nMessagesItem.propTypes = {\n  message: PropTypes.shape({\n    id: PropTypes.string,\n    tags: PropTypes.array,\n    subject: PropTypes.string,\n    send: PropTypes.string,\n    body: PropTypes.string,\n    date: PropTypes.string,\n    selected: PropTypes.boolean,\n  })\n};\n\nexport default MessagesItem;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckBox } from '../CheckBoxGroup'\nimport MessagesItem from '../MessagesItem';\nimport Delete from '@material-ui/icons/Delete';\nimport './style.scss'\n\nclass MessagesList extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      isAllSelected: false,\n      messagesList: this.props.messagesData.messages\n    }\n  \n    this.props = {\n      messagesData: []\n    }\n\n    this.onSelected = this.onSelected.bind(this)\n  }\n\n  onSelected(checkName, isChecked) {\n    let isAllChecked = (checkName === 'all' && isChecked);\n    let isAllUnChecked = (checkName === 'all' && !isChecked);\n    const checked = isChecked;\n\n    const messagesList = this.state.messagesList.map((message, i) => {\n        if(isAllChecked || message.id === checkName) {\n            return Object.assign({}, message, {\n                checked\n            });\n        } else if (isAllUnChecked) {\n            return Object.assign({}, message, {\n                checked: false,\n            });\n        }\n\n        return message;\n    });\n\n    let isAllSelected = (messagesList.findIndex((item) => item.checked === false) === -1) || isAllChecked;\n\n    this.setState({\n        messagesList,\n        isAllSelected,\n    });\n  }\n  \n  delete(message){\n    const newMessageList = this.state.messagesList;\n  \tif (newMessageList.indexOf(message) > -1) {\n    \tnewMessageList.splice(newMessageList.indexOf(message), 1);\n      this.setState({data: newMessageList})\n    }\n  }\n\n  deleteBatch(items){\n    // TO DO: Delete all or multples messages\n  }\n\n  render() {\n    const { isAllSelected, messagesList } = this.state\n\n    return (\n      <div>\n        <h2>All Messages ({messagesList.length})</h2>\n          <CheckBox\n            name=\"select-all\"\n            value=\"all\"\n            selected={isAllSelected}\n            onCheck={this.onSelected.bind(this)}\n          >\n          {messagesList.map((message, i) => {\n            return(\n              <CheckBox\n                key={i}\n                className='message-with-checkbox'\n                name={message.subject}\n                value={message.id}\n                selected={message.checked}\n                onCheck={this.onSelected.bind(this)}\n              >\n                <MessagesItem message={message} />\n                <Delete onClick={this.delete.bind(this, message)}>Delete</Delete>\n              </CheckBox>\n              )\n          })}\n        </CheckBox>\n      </div>\n    )\n  }\n}\n\nMessagesList.propTypes = {\n  messagesData: PropTypes.shape({\n    count: PropTypes.string,\n  }),\n};\n\nexport default MessagesList\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MessagesList from '../../components/MessagesList';\n\nconst MessagesIndex = props => {\n  return (\n    <div>\n      <MessagesList messagesData={props.messagesData} />\n    </div>\n  );\n};\n\nMessagesIndex.propTypes = {\n  messagesData: PropTypes.shape({})\n};\n\nexport default MessagesIndex;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MessagesShow = props => {\n  return (\n    <div>\n      <h1>Message Details</h1>\n    </div>\n  );\n};\n\nMessagesShow.propTypes = {\n  messagesData: PropTypes.shape({})\n};\n\nexport default MessagesShow;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n/* Layout */\nimport NavigationLayout from './components/NavigationLayout'\n\n/* Views */\nimport MessagesIndex from './views/MessagesIndex'\nimport MessagesShow from './views/MessagesShow'\n\n/*Data*/\nimport messagesData from './data/emails.json'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <NavigationLayout tags={messagesData}>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`}  render={props => <MessagesIndex {...props} messagesData={messagesData} />}/>\n            <Route path={`${process.env.PUBLIC_URL}/messages/:id`} \n              render={props => <MessagesShow {...props} messagesData={messagesData} />} />\n          </Switch>\n        </NavigationLayout>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}